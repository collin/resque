%style
  :sass
    .failure_queues
      > li
        border-bottom: 1px dashed #999
        padding: 2em 0
      .call
        display: inline-block
        font-size: 24px
        font-family: Monaco
        sup
          font-size: 8px
      
      .tools
        padding-top: 3px
      .count, .call
        display: inline-block !important
      .count
        background: #CE1212
        border: 1px solid #CE1212
        color: white
        padding: 3px
        margin:
          top: 8px
          right: 10px
        -moz-border-radius: 5px
      .error
        color: #CE1212
        font-size: 16px
        font-family: Monaco
        margin-top: 10px
      ol.backtrace
        padding-top: 1em
        line-height: 1.5
        font-family: Monaco
        display: none
  

:jabs
  jQuery.fn.ajax = jQuery.ajax
  :ready
    $button.backtrace
      :click
        .parents 'li:first'
          &ol.backtrace
            .toggle 'fast'
:jabs
  :ready
    $button
      :click
        var action = @action
        fun handle_success
          .closest 'li'
            .remove
        .ajax
          url: action
          type: 'post'
          success: handle_success

%ul.failure_queues
  - Resque::Failure.failure_queues.each do |queue|
    - if queue.any?
      %li[queue]
        .call 
          #{queue.queue["queue_name"]} 
          %sup called with: #{queue.payload["args"]}
        .error #{queue.error}
        .tools
          .count #{queue.count} failures
          %button.reschedule{'action'=>u("/reschedule/#{queue.name}")} Reschedule
          %button.backtrace Show Backtrace
        %ol.backtrace
          - queue.backtrace.each do |link, line|
            %li
              %a{:href => link}= line
      
/ - failed = Resque::Failure.all(start, 20)
/ %h1
/   Failed Jobs
/ - unless failed.empty?
/   %form.clear-failed{ :action => url('failed/clear'), :method => "POST" }
/     %input{ :name => "", :type => "submit", :value => "Clear Failed Jobs" }
/ 
/ %p.sub
/   Showing
/   = start
/   to
/   = start + 20
/   of
/   %b
/     = size = Resque::Failure.count
/   jobs
/ %ul.failed
/   - for job in failed
/     %li
/       %dl
/         %dt
/           Worker
/         %dd
/           %a{ :href => url(:workers, job['worker']) }
/             = job['worker'].split(':')[0...2].join(':')
/           on
/           %b.queue-tag
/             = job['queue']
/           at
/           %b
/             %span.time
/               = job['failed_at']
/         %dt
/           Class
/         %dd
/           %code
/             = job['payload']['class']
/         %dt
/           Arguments
/         %dd
/           %pre
/             = h show_args(job['payload']['args'])
/         %dt
/           Error
/         %dd.error
/           %a.backtrace{ :href => "#" }
/             = h(job['error'])
/           %pre{ :style => "display:none" }
/             = h job['backtrace'].join("\n")
/       .r
/ = partial :next_more, :start => start, :size => size
