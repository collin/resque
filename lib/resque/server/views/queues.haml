- @subtabs = resque.queues unless partial?
- if queue = params[:id]
  %h1
    Pending jobs on
    %span.hl
      = queue
  %p.sub
    Showing
    = start = params[:start].to_i
    to
    = start + 20
    of
    %b
      = size = resque.size(queue)
    jobs
  %table.jobs
    %tr
      %th
        Class
      %th
        Args
    - for job in (jobs = resque.peek(queue, start, 20))
      %tr
        %td.class
          = job['class']
        %td.args
          = h job['args'].inspect
    - if jobs.empty?
      %tr
        %td.no-data{ :colspan => "2" }
          There are no pending jobs in this queue
  = partial :next_more, :start => start, :size => size
- else
  %style
    :sass
      .failed
        clear: both
      .queues
        list-style: none
        margin: 0
        padding: 0
        .buttons
          :float left
        .meta, .buttons
          display: inline
        .meta *
          margin-left: 20px
        .count
          display: inline-block
          background: #278601
          border: 1px solid #278601
          color: white
          padding: 3px
          margin:
            top: 8px
            right: 10px
          -moz-border-radius: 5px
        li
          border-bottom: 1px dashed #999
          clear: both
          padding: 10px
          h2
            margin: 0 !important
          img
            opacity: 0.05
          &:last-child
            border: none
          &:hover
            background: #fafafa
            img
              opacity: 0.4
              &:hover
                opacity: 1
    
  %h1
    Queues
  %p.intro
    The list below contains all the registered queues with the number of jobs currently in the queue. Select a queue from above to view all jobs currently pending on the queue.
  %ol.queues
    :jabs
      :ready
        $.queues .delete
          :click
            // TODO FIX THIS ISSUE: http://gist.github.com/collin/jabs/issues#issue/7
            var action = @action
            fun success_handler
              .closest 'li'
                .remove
                
            .siblings '.size'
              if parseInt(@innerHTML, 10) != 0
                alert("WILL NOT DELETE A QUEUE WITH JOBS IN IT. USE COMMAND LINE IF YOU REALLY WANT TO")
              else if confirm("Really DELETE this queue?")
                .ajax
                  type: 'delete'
                  url: action
                  success: success_handler
                  
    - for queue in resque.queues
      %li
        .buttons
          %img.delete(src="delete.png" action="queues/#{queue}")
          %img.sort{:src=>u("sort.png")}
          %img{:src=>u("stop.png")}
          %img{:src=>u("start.png")}
        .meta
          %h2
            %a.queue{ :href => url("queues/#{queue}") }= queue.name.titleize
          .count #{queue.size.humanize} scheduled
        - if queue.failure_queues.any?
          %ul.failures
            - queue.failure_queues.each do |failure_queue|
              %li
                %a{:href=>url("failures/#{failure_queue}")}= failure_queue
  .failed
    %a.queue{ :href => url(:failed) }
      failed
    %span.size
      = Resque::Failure.count
